from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

# –°—Ç–∞–Ω –¥–ª—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É
class AgentState(StatesGroup):
    waiting_for_prompt = State()

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /ai ‚Äî –≤—Ö—ñ–¥ —É —Ä–µ–∂–∏–º –∞–≥–µ–Ω—Ç–∞
async def enter_ageent_mode(message: types.Message, state: FSMContext):
    await state.set_state(AgentState.waiting_for_prompt)
    await message.answer("üß† –í–≤–µ–¥–∏ –∑–∞–ø–∏—Ç, —ñ —è –π–æ–≥–æ –∑–∞–ª–æ–≥—É—é.")

# –ü—Ä–∏–π–æ–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –ª–æ–≥—É–≤–∞–Ω–Ω—è
async def receive_prompt(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    prompt = message.text.strip()

    with open(f"logs/agent_{user_id}.txt", "a", encoding="utf-8") as f:
        f.write(prompt + "\n")

    await state.clear()
    await message.answer("‚úÖ –ó–∞–ø–∏—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ª–æ–≥.")

# –ö–Ω–æ–ø–∫–∞ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞, –¥–ª—è –º–µ–Ω—é)
async def button_agent_mode(callback: types.CallbackQuery):
    await callback.message.answer("üß† –í–≤–µ–¥–∏ /ai —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –∞–≥–µ–Ω—Ç–∞.")
    await callback.answer()
